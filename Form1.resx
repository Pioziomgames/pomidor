<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>